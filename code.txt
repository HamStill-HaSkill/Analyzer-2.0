{
	public static void Some()
	{
		System.out.print("Hello");		
	}
	
	


public static void main(String[] args) 
	{
   		CalculateSomething();
		TetstPolygone2();
		Google1();
		e();
		Some();
		GAGAGA();

		}


	public static void Other()
	{
		Some();
	}
	
	public static void e()
	{
		Other();
		int banan = System.in.nextInt();
		int[] array = {10, 2, 10, 3, 1, 2, 5};
		System.out.println(Arrays.toString(array));
		for (int left = 0; left < array.length; left++) 
		{	
			int value = array[left];	
			int i = left - 1;
			for (; i >= 0; i--) 
			{
				if (value < array[i]) 
				{
					array[i + 1] = array[i];
				} else 
				{			
					break;
				}
	}	
	array[i + 1] = value;
	Some();
	}
		System.out.println(Arrays.toString(array));
		System.out.println(banan);
	}


	public static void Google1()
	{

	if (x < 0)
	{
	
	}
	else
	{
		if (x == 0)
		{
		}
		else
		{ 
			if (x < 0.5)
			{ 
			}
			else
			{
				if (x < 1)
				 {
				 }
				 else
				 {
				 }
			 }
		 }
	}
	}

	public static void TetstPolygone2()
	{
		switch (x)
		{
			case x < 0:
			break;

			case x == 0:
			break;

			case x < 0.5:
			break;

			case x < 1:
			break;

			deafault
			break;

		}
	}

	
	 public static void GAGAGA()
	{
		int x = System.in.nextInt();
		int[100][100][100] array;
	
		
		for (int i = 0; i < array.length; i++)
		{
			for (int j = 0; j < array[0].length; j++)
			{
				for (int k = 0; k < array[0][0].length; k++)
				{
					do
					{
						array[i][j][k] *= i;
						array[i][j][k] */ j;
						array[i][j][k] = k - array[i][j][k];
					} while (array[i][j][k] > 42 && array[i][j][k] < 1337)
				}
			}
		}

		for (int l = 0; l < 100; l++)
{
		if (x < 1)
		{
			for (int i = 0; i < array.length;i++)
			{
				for (int j = 0; j < array[0].length)
				{
					for (int k = 0; k < array[0][0].length; k++)
					{
						while (array[i][j][k] > 0)
						{
							switch (array[i][j][k])
							{
								case array[i][j][k] < 20:
									int fact = 1;
									
									array[i][j][k]--;
									System.out.println(fact);																		
								break;
								
								
								
								
								default:
									System.out.println(array[i][j][k]);
									array[i][j][k]--;
								break;
							}

						}

					}
				}
}
}
}
			}
		}
}
	}


}